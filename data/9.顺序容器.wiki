++ 9.顺序容器
1. adaptor：改变接口而不改变底层实现方式即适配（stack）？？
a.在Adapter模式的两种模式中，有一个很重要的概念就是接口继承和实现继承的区别和联系。接口继承和实现继承是面向对象领域的两个重要的概念，接口继承指的是通过继承，子类获得了父类的接口，而实现继承指的是通过继承子类获得了父类的实现（并不统共接口）
2.一个容器复制给另一容器，类型必须匹配
3.系统允许传递一对迭代器(不要求容器类型相同)，将一个容器的元素复制给另一个元素。
    char *words[]={"stately","plump","buck","mulligan"};
    list<string> words2(words, words + words_size);
4.容器内元素的类型约束
    a.元素类型必须支持赋值运算
    b.元素类型的对象必须可以复制
c.引用，IO库类型，不支持复制和赋值，因此不能创建引用类型的容器，和IO对象的容器
5.迭代器范围：last/end，指向最后一个元素的下一个元素；
6.[顺序容器操作]
7.容器内元素都为副本
8.容器的选用：开始随机插入，后又随机访问，可以开始用list后复制到queue;
9.string可视为字符容器，提供与vector容器相同的操作，但以栈的方式除外(back/pop_back)
10.adaper:stack可以在任意顺序容器上，queue，只能在list容器上，priority_queue,可以在vector，或deque上。
11.排序，查找不是由容器类型提供。

