++ 7.函数
1.参数传递：非const引用形参在使用时不太灵活，这样的形参既不能用const对象初始化，也不能用字面值或产生右值得表达式实参初始化。
2.指针的引用； 即指针的别名；
3.C++倾向于通过传递指向容器中需要处理的元素的迭代器来传递容器。？？？
4.传递数组参数的两种方法
    a.传递指向数组第一个和最后一个元素的下一个位置的指针
    b.传递第一个指针，和数组大小
5.不可返还局部对象的引用，同不可返还局部指针；
6.如果不希望引用的返回值被修改，返回值声明为const; const char &get_val();
7.默认实参：如果一个形参具有默认实参，那么，所有的形参都必须有默认实参。
8.const成员函数：成员函数形参表后面跟const,该成员函数不改变成员变量值。
9.重载：过分重载，在一些情况下，使用不同的函数名能提供较多的信息，这时不易使用重载；
10.重载是声明在同一个作用域的同名函数，若局部的声明一个函数，则该函数将屏蔽(而不是重载)外层作用域中声明的同名函数。
11.函数指针：
    a.函数指针是指向函数，而非对象的指针；
    b.在引用函数名，但又没有调用该函数时，函数名将被自动解释为指向函数的指针；
    c.指向不同函数类型的指针不存在转换；
    d.通过指针调用函数可以不用解引用：pf("hi");                                                       e.函数指针可做函数形参：    两种形式1.f(int a, bool(int a)); 2.f(int a, bool（*）(int a));
    f.返回指向函数的指针???
    

