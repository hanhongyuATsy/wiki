++ 6个原则

１．单例模式：　保证一个类只有一个实例,并提供一个访问它的全局访问点
２．开放封闭原则：软件实体(类,函数,模块等),应该可以扩展,但是不可以修改
３．依赖倒转原则：高层模块不应该依赖于低层模块,两者都依赖于抽象；抽象不应该依赖于细节,细节应该依赖于抽象；针对接口编程,不应该针对实现编程
４．里氏代换原则：子类型必须能够替换掉它们的父类型；在程序中,把父类型全部替换成子类型,程序的行为没有变化
５．迪米特法则：如果两个类不必直接通信,那么这两个类就不应该发生直接的相互作用,如果一个类需要调用另一个类的方法时,可以通过第三者转发这个调用？？